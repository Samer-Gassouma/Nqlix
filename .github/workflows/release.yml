name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install frontend dependencies
        run: pnpm install

      - name: Build frontend
        run: pnpm build

      - name: Build Tauri app
        run: pnpm tauri build
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: List build artifacts (for debugging)
        run: |
          Write-Host "Listing build artifacts:"
          Get-ChildItem -Recurse src-tauri/target/release/bundle/ | Select-Object FullName

      - name: Generate signatures for built artifacts
        run: |
          Write-Host "Generating signatures for built artifacts..."
          
          # Generate signature for MSI file
          $msiFiles = Get-ChildItem -Path "src-tauri/target/release/bundle/msi/" -Filter "*.msi" -Recurse
          foreach ($msiFile in $msiFiles) {
            Write-Host "Signing MSI file: $($msiFile.FullName)"
            pnpm tauri signer sign "$($msiFile.FullName)"
          }
          
          # Generate signature for EXE file
          $exeFiles = Get-ChildItem -Path "src-tauri/target/release/bundle/nsis/" -Filter "*.exe" -Recurse
          foreach ($exeFile in $exeFiles) {
            Write-Host "Signing EXE file: $($exeFile.FullName)"
            pnpm tauri signer sign "$($exeFile.FullName)"
          }
          
          Write-Host "Signature generation completed."
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: List generated signatures (for debugging)
        run: |
          Write-Host "Listing generated signatures:"
          Get-ChildItem -Recurse src-tauri/target/release/bundle/ -Filter "*.sig" | Select-Object FullName

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/msi/*.sig
            src-tauri/target/release/bundle/nsis/*.exe
            src-tauri/target/release/bundle/nsis/*.sig
            src-tauri/target/release/bundle/updater/*.json
            src-tauri/target/release/bundle/updater/*.sig
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}